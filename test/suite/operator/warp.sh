. test/assert.sh

hint 'operator/warp'

# Arguments Warp
pass '("()<-" "OP" "(\"@>>\") (\"@\")") ("OP" #100# #200# #300#)' '#200#'
pass '("()<-" "OP" "(\"@>>\") (\"@>>\") (\"@\")") ("OP" #100# #200# #300#)' '#300#'
fail '("()<-" "OP" "(\"@>>\") (\"@>>\") (\"@>>\") (\"@\")") ("OP" #100# #200# #300#)' '#4#'
pass '("@>>")' '?'
pass '("()<-" "OP" "(\"@>>\")") ("OP")' '?'
pass '("()<-" "OP" "(\"@>>\") (\"@\")")
("x<-" "score" #2#)
("OP"
    ("x<-" "score" ("*" ("x->" "score") #3#))
    ("x<-" "score" ("*" ("x->" "score") #5#))
    ("x<-" "score" ("*" ("x->" "score") #7#))
)
("x->" "score")' '#10#'
pass '("()<-" "OP" "(\"@>>\") (\"@>>\") (\"@\")")
("x<-" "score" #2#)
("OP"
    ("x<-" "score" ("*" ("x->" "score") #3#))
    ("x<-" "score" ("*" ("x->" "score") #5#))
    ("x<-" "score" ("*" ("x->" "score") #7#))
)
("x->" "score")' '#14#'
pass '("()<-" "OP" "(\"@>>\") (\"@\") (\"@>>\")")
("x<-" "score" #2#)
("OP"
    ("x<-" "score" ("*" ("x->" "score") #3#))
    ("x<-" "score" ("*" ("x->" "score") #5#))
    ("x<-" "score" ("*" ("x->" "score") #7#))
)
("x->" "score")' '#10#'
pass '("()<-" "OP" "(\"@\") (\"@>>\") (\"@>>\")")
("x<-" "score" #2#)
("OP"
    ("x<-" "score" ("*" ("x->" "score") #3#))
    ("x<-" "score" ("*" ("x->" "score") #5#))
    ("x<-" "score" ("*" ("x->" "score") #7#))
)
("x->" "score")' '#6#'
