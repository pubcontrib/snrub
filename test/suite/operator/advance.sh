. test/assert.sh

hint 'operator/advance'

# Arguments Advance
pass '("()<-" "OP" "(\"@\")") ("OP" ?)' '?'
pass '("()<-" "OP" "(\"@\")") ("OP" #100#)' '#100#'
pass '("()<-" "OP" "(\"@\")") ("OP" "word")' '"word"'
pass '("()<-" "OP" "(\"@\")") ("OP" [#1# #2# #3#])' '[#1# #2# #3#]'
pass '("()<-" "OP" "(\"@\")") ("OP" {"key" "value"})' '{"key" "value"}'
pass '("()<-" "OP" "(\"@\")") ("OP" #100# #200# #300#)' '#100#'
pass '("()<-" "OP" "(\"@\") (\"@\")") ("OP" #100# #200# #300#)' '#200#'
pass '("()<-" "OP" "(\"@\") (\"@\") (\"@\")") ("OP" #100# #200# #300#)' '#300#'
pass '("@")' '?'
fail '("@") ("@")' '#4#'
fail '("()<-" "OP" "(\"@\")") ("OP")' '#4#'
fail '("()<-" "OP" "(\"@\") (\"@\") (\"@\") (\"@\")") ("OP" #100# #200# #300#)' '#4#'
pass '("()<-" "OP" "")
("x<-" "score" #0#)
("OP"
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
)
("x->" "score")' '#0#'
pass '("()<-" "OP" "(\"@\")")
("x<-" "score" #0#)
("OP"
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
)
("x->" "score")' '#1#'
pass '("()<-" "OP" "(\"@\") (\"@\")")
("x<-" "score" #0#)
("OP"
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
)
("x->" "score")' '#2#'
pass '("()<-" "OP" "(\"@\") (\"@\") (\"@\")")
("x<-" "score" #0#)
("OP"
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
)
("x->" "score")' '#3#'
