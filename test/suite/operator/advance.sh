. test/assert.sh

hint 'operator/advance'

# Arguments Advance
pass '("()<-" "DO" "(\"@\")") ("DO" ?)' '?'
pass '("()<-" "DO" "(\"@\")") ("DO" #100#)' '#100#'
pass '("()<-" "DO" "(\"@\")") ("DO" "word")' '"word"'
pass '("()<-" "DO" "(\"@\")") ("DO" [#1# #2# #3#])' '[#1# #2# #3#]'
pass '("()<-" "DO" "(\"@\")") ("DO" {"key" "value"})' '{"key" "value"}'
pass '("()<-" "DO" "(\"@\")") ("DO" #100# #200# #300#)' '#100#'
pass '("()<-" "DO" "(\"@\") (\"@\")") ("DO" #100# #200# #300#)' '#200#'
pass '("()<-" "DO" "(\"@\") (\"@\") (\"@\")") ("DO" #100# #200# #300#)' '#300#'
pass '("@")' '?'
fail '("@") ("@")' '#4#'
fail '("()<-" "DO" "(\"@\")") ("DO")' '#4#'
fail '("()<-" "DO" "(\"@\") (\"@\") (\"@\") (\"@\")") ("DO" #100# #200# #300#)' '#4#'
pass '("()<-" "DO" "")
("x<-" "score" #0#)
("DO"
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
)
("x->" "score")' '#0#'
pass '("()<-" "DO" "(\"@\")")
("x<-" "score" #0#)
("DO"
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
)
("x->" "score")' '#1#'
pass '("()<-" "DO" "(\"@\") (\"@\")")
("x<-" "score" #0#)
("DO"
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
)
("x->" "score")' '#2#'
pass '("()<-" "DO" "(\"@\") (\"@\") (\"@\")")
("x<-" "score" #0#)
("DO"
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
    ("x<-" "score" ("+" ("x->" "score") #1#))
)
("x->" "score")' '#3#'
