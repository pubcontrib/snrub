. test/assert.sh

hint 'operator/overload'

# Operator Overloading
pass '("()<-" "DO" "") ("DO")' '?'
pass '("()<-" "SQUARE" "(\"x<-\" \"#\" (\"@\")) (\"*\" (\"x->\" \"#\") (\"x->\" \"#\"))") ("SQUARE" #10#)' '#100#'
fail '("()<-" "SQUARE" "(\"x<-\" \"#\" (\"@\")) (\"*\" (\"x->\" \"#\") (\"x->\" \"#\"))") ("()<-" "DO" "(\"SQUARE\" #10#)") ("DO")' '#4#'
pass '("()<-" "DO" "\"first\"") ("()<-" "DO" "\"last\"") ("DO" ?)' '"last"'
pass '("()<-" "!" "(\"+\" (\"@\") \"!!!\")") ("!" "hello")' '"hello!!!"'
pass '("()<-" "DO" "#123#") ("DO" ?)' '#123#'
pass '("()<-" "DO" "#123#") ("DO" ?) ("DO" ?) ("DO" ?)' '#123#'

# Literal Evaluation
pass '("()<-" "DO" "?") ("DO" ?)' '?'
pass '("()<-" "DO" "#100#") ("DO" ?)' '#100#'
pass '("()<-" "DO" "\"word\"") ("DO" ?)' '"word"'
pass '("()<-" "DO" "[#1# #2# #3#]") ("DO" ?)' '[#1# #2# #3#]'
pass '("()<-" "DO" "{\"key\" \"value\"}") ("DO" ?)' '{"key" "value"}'
pass '("()<-" "DO" "(\"#\" \"1\")") ("DO" ?)' '#1#'

# Variable Persistence
pass '("()<-" "DO" "(\"x<-\" \"local\" \"word\")") ("DO" ?) ("x->" "local")' '?'
pass '("()<-" "DO" "(\"x<-\" \"local\" \"after\")") ("x<-" "local" "before") ("DO" ?) ("x->" "local")' '"before"'

# Argument Passthrough
pass '("()<-" "DO" "") ("DO" ?) ("x->" "@")' '?'
pass '("()<-" "DO" "") ("DO" #100#) ("x->" "@")' '?'
pass '("()<-" "DO" "") ("DO" "word") ("x->" "@")' '?'
pass '("()<-" "DO" "") ("DO" [#1# #2# #3#]) ("x->" "@")' '?'
pass '("()<-" "DO" "") ("DO" {"key" "value"}) ("x->" "@")' '?'
pass '("()<-" "DO" "(\"@\")") ("DO" ?)' '?'
pass '("()<-" "DO" "(\"@\")") ("DO" #100#)' '#100#'
pass '("()<-" "DO" "(\"@\")") ("DO" "word")' '"word"'
pass '("()<-" "DO" "(\"@\")") ("DO" [#1# #2# #3#])' '[#1# #2# #3#]'
pass '("()<-" "DO" "(\"@\")") ("DO" {"key" "value"})' '{"key" "value"}'
pass '("()<-" "DO" "") ("x<-" "@" "before") ("DO" "after") ("x->" "@")' '"before"'
pass '("()<-" "DO" "(\"x<-\" \"@\" \"lastly\")") ("x<-" "@" "before") ("DO" "after") ("x->" "@")' '"before"'
pass '("()<-" "DO" "") ("DO" ("<>" "ERROR"))' '?'
fail '("()<-" "DO" "(\"@\")") ("DO" ("<>" "ERROR"))' '"ERROR"'

# Argument Error
fail '("()<-")' '#4#'
fail '("()<-" ?)' '#4#'
fail '("()<-" ? ?)' '#4#'
fail '("()<-" ? ##)' '#4#'
fail '("()<-" ? "")' '#4#'
fail '("()<-" ? [])' '#4#'
fail '("()<-" ? {})' '#4#'
fail '("()<-" ##)' '#4#'
fail '("()<-" ## ?)' '#4#'
fail '("()<-" ## ##)' '#4#'
fail '("()<-" ## "")' '#4#'
fail '("()<-" ## [])' '#4#'
fail '("()<-" ## {})' '#4#'
fail '("()<-" "")' '#4#'
fail '("()<-" [])' '#4#'
fail '("()<-" [] ?)' '#4#'
fail '("()<-" [] ##)' '#4#'
fail '("()<-" [] "")' '#4#'
fail '("()<-" [] [])' '#4#'
fail '("()<-" [] {})' '#4#'
fail '("()<-" {})' '#4#'
fail '("()<-" {} ?)' '#4#'
fail '("()<-" {} ##)' '#4#'
fail '("()<-" {} "")' '#4#'
fail '("()<-" {} [])' '#4#'
fail '("()<-" {} {})' '#4#'

# Error Propogation
fail '("()<-" ("<>" "ERROR") "(\"#\" \"100\")")' '"ERROR"'
fail '("()<-" "DO" ("<>" "ERROR"))' '"ERROR"'
